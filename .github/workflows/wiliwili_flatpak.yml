name: Build wiliwili (flatpak)

on:
  # push:
    # branches:
      # - main
  pull_request:
  workflow_dispatch:
    inputs:
      ssh_darwin:
        description: 'SSH connection to Darwin'
        required: false
        default: 'false'
      ssh_ubuntu:
        description: 'SSH connection to Ubuntu'
        required: false
        default: 'false'
      release:
        description: 'Push a new release'
        required: false
        default: 'false'
      version:
        description: 'Version'
        required: false
        default: '0.0.0'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
      standard_version: ${{ steps.info.outputs.standard_version }}
      DIST_EXE: ${{ steps.info.outputs.DIST_EXE }}
      DIST_NRO: ${{ steps.info.outputs.DIST_NRO }}
      DIST_INTEL_DMG: ${{ steps.info.outputs.DIST_INTEL_DMG }}
      DIST_FLATPAK_X86_64: ${{ steps.info.outputs.DIST_FLATPAK_X86_64 }}
      DIST_FLATPAK_AARCH64: ${{ steps.info.outputs.DIST_FLATPAK_AARCH64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'xfangfang/wiliwili'

      - name: Debug version
        run: |
          export VERSION=`git rev-parse --short HEAD`
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Release version
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()
        run: |
          export VERSION="${{ github.event.inputs.version }}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Version
        id: info
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_EXE=wiliwili-Windows-x64-${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_NRO=wiliwili-NintendoSwitch-${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_INTEL_DMG=wiliwili-macOS-IntelChip-${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_FLATPAK_X86_64=wiliwili-Linux-${VERSION}-x86_64" >> $GITHUB_OUTPUT
          echo "DIST_FLATPAK_AARCH64=wiliwili-Linux-${VERSION}-aarch64" >> $GITHUB_OUTPUT
          echo $VERSION
          echo "${{  github.event.inputs.version }}"

  release:
    needs: [ build-flatpak, version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - name: Version
        run: |
          echo "DIST_FLATPAK_X86_64=${{ needs.version.outputs.DIST_FLATPAK_X86_64 }}" >> $GITHUB_ENV
          echo "DIST_FLATPAK_AARCH64=${{ needs.version.outputs.DIST_FLATPAK_AARCH64 }}" >> $GITHUB_ENV
          echo $GITHUB_ENV
          ls -lah

      - name: Upload Release
        if: github.event.inputs.release == 'true' && !cancelled()
        uses: ncipollo/release-action@v1
        with:
          name: wiliwili ${{  github.event.inputs.version }}
          tag: ${{  github.event.inputs.version }}
          omitBodyDuringUpdate: true
          body: This release is built by github-action.
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: >
            ${{ env.DIST_FLATPAK_X86_64 }}/${{ env.DIST_FLATPAK_X86_64 }}.zip
            ${{ env.DIST_FLATPAK_AARCH64 }}/${{ env.DIST_FLATPAK_AARCH64 }}.zip

      - name: Upload WeTransfer
        if: github.event.inputs.release != 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress \
            ${{ env.DIST_FLATPAK_X86_64 }}/${{ env.DIST_FLATPAK_X86_64 }}.zip \
            ${{ env.DIST_FLATPAK_AARCH64 }}/${{ env.DIST_FLATPAK_AARCH64 }}.zip  2>&1 | tee wetransfer.log
          echo "::warning title=免登录下载::$(cat wetransfer.log | grep https)"

  build-flatpak:
    needs: [ version ]
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-22.08
      options: --privileged
    strategy:
      matrix:
        arch: [x86_64, aarch64]
      # Don't fail the whole workflow if one architecture fails
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'xfangfang/wiliwili'
          submodules: 'recursive'
      - name: Install deps
        run: |
          dnf -y install docker
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      - uses: flatpak/flatpak-github-actions/flatpak-builder@v5
        with:
          bundle: wiliwili-Linux-${{ matrix.arch }}-${{ needs.version.outputs.version }}.flatpak
          manifest-path: .flatpak-manifest.yml
          cache-key: flatpak-builder-${{ matrix.arch }}-${{ github.sha }}
          arch: ${{ matrix.arch }}

      - name: Upload dist
        uses: actions/upload-artifact@v3
        if: steps.compile.outputs.status == 'success'
        env:
            VERSION: ${{ needs.version.outputs.version }}
        with:
          name: wiliwili-Linux-${{ matrix.arch }}-${{ needs.version.outputs.version }}.flatpak
          path: wiliwili-Linux-${{ matrix.arch }}-${{ needs.version.outputs.version }}.flatpak
